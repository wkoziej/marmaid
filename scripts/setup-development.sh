#!/bin/bash
# ABOUTME: Complete development environment setup script
# ABOUTME: Sets up everything developer needs to start coding immediately

set -e

echo "🚀 Setting up Marmaid development environment..."
echo "=================================================="

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Function to print colored output
print_status() {
    echo -e "${BLUE}▶${NC} $1"
}

print_success() {
    echo -e "${GREEN}✅${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}⚠️${NC} $1"
}

print_error() {
    echo -e "${RED}❌${NC} $1"
}

# Check prerequisites
print_status "Checking prerequisites..."

# Check Node.js
if ! command -v node &> /dev/null; then
    print_error "Node.js is required but not installed"
    exit 1
fi
print_success "Node.js $(node --version) found"

# Check Docker
if ! command -v docker &> /dev/null; then
    print_error "Docker is required but not installed"
    print_warning "Please install Docker Desktop: https://www.docker.com/products/docker-desktop"
    exit 1
fi
print_success "Docker found"

# Check if Docker is running
if ! docker info &> /dev/null; then
    print_error "Docker is installed but not running"
    print_warning "Please start Docker Desktop and try again"
    exit 1
fi
print_success "Docker is running"

# Install Supabase CLI if not present
if ! command -v supabase &> /dev/null; then
    print_status "Installing Supabase CLI..."
    npm install -g supabase
    print_success "Supabase CLI installed"
else
    print_success "Supabase CLI found"
fi

# Setup frontend dependencies
print_status "Installing frontend dependencies..."
cd frontend
npm install
print_success "Frontend dependencies installed"

# Setup pre-commit hooks
print_status "Setting up pre-commit hooks..."
npm run hooks:install
print_success "Pre-commit hooks configured"

# Setup local Supabase
cd ..
print_status "Setting up local Supabase..."
if [ ! -f "supabase/.env" ]; then
    supabase init
fi

# Start Supabase local
print_status "Starting Supabase local services..."
supabase start

# Apply all migrations to local DB
print_status "Applying migrations to local database..."
supabase db reset

# Setup local environment file
print_status "Configuring local environment..."
cd frontend

# Get the real anon key from running Supabase instance
print_status "Getting Supabase local credentials..."
SUPABASE_ANON_KEY=$(supabase status | grep "anon key" | cut -d: -f2 | xargs)
SUPABASE_API_URL=$(supabase status | grep "API URL" | cut -d: -f2- | xargs)

if [ -z "$SUPABASE_ANON_KEY" ] || [ -z "$SUPABASE_API_URL" ]; then
    print_error "Could not retrieve Supabase credentials"
    print_warning "Make sure Supabase is running with: supabase start"
    exit 1
fi

# Create .env.local with real localhost Supabase credentials
cat > .env.local << EOF
# Local development environment (auto-generated by setup script)
VITE_SUPABASE_URL=$SUPABASE_API_URL
VITE_SUPABASE_ANON_KEY=$SUPABASE_ANON_KEY

# Development environment marker
NODE_ENV=development
VITE_ENVIRONMENT=development
EOF

print_success "Local environment configured"

# Verify setup by running tests
print_status "Verifying setup with unit tests..."
npm run test:unit > /dev/null 2>&1
print_success "Unit tests passing"

# Setup complete
echo ""
echo "=================================================="
echo -e "${GREEN}🎉 Development environment setup complete!${NC}"
echo ""
echo -e "${BLUE}Next steps:${NC}"
echo "  1. Run: ${YELLOW}npm run dev${NC} (starts both Supabase + frontend)"
echo "  2. Open: ${YELLOW}http://localhost:5173${NC}"
echo "  3. Admin Panel: ${YELLOW}http://localhost:54323${NC}"
echo ""
echo -e "${BLUE}Development workflow:${NC}"
echo "  • Make changes to code"
echo "  • Commit with: ${YELLOW}git commit -m 'your message'${NC}"  
echo "  • Push with: ${YELLOW}git push${NC}"
echo "  • CI/CD handles the rest automatically!"
echo ""
echo -e "${BLUE}Useful commands:${NC}"
echo "  • ${YELLOW}npm run dev${NC}          - Start development"
echo "  • ${YELLOW}npm run test:unit${NC}    - Run unit tests"  
echo "  • ${YELLOW}npm run test:coverage${NC} - Check test coverage"
echo "  • ${YELLOW}npm run quality-gates${NC} - Run all quality checks"
echo ""
echo -e "${GREEN}Happy coding! 🚀${NC}"